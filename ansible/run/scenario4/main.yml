- name: Retstart dnsmasq on inetdns
  hosts: inetdns
  become: true
  tasks:
  - name: stop dnsmasq
    ansible.builtin.service:
      name: dnsmasq
      state: stopped
    tags:
      - playbooks

  - name: start dnsmasq
    ansible.builtin.service:
      name: dnsmasq
      state: started
    tags:
      - playbooks

- name: Install Attacker Host
  hosts: attacker
  become: true
  vars:
    attacker_user: aecid
    attacker_ip: 192.42.1.174
    delay_before_attack: 3
  handlers:
    - name: restart dnsmasq
      ansible.builtin.service:
        name: dnsmasq
        state: restarted
      delegate_to: inetdns
  tasks:
    - name: restart msfrpcd
      ansible.builtin.service:
        name: msfrpcd
        state: restarted
    
    - name: ensure sshpass is installed
      ansible.builtin.apt:
        name: sshpass
        state: present
      tags:
        - playbooks

    - name: Ensure delay before commands
      ansible.builtin.replace:
        path: /etc/attackmate.yml
        regexp: 'command_delay: 0'
        replace: 'command_delay: 15'
        backup: yes
      become: true
      tags:
        - playbooks

    - name: get user home directory
      ansible.builtin.shell: >
             getent passwd {{ attacker_user }}  | awk -F: '{ print $6 }'
      changed_when: false
      register: user_home
      tags:
        - playbooks
        - scenario_4

    - name: Start the sliver service with sudo
      ansible.builtin.systemd:
        name: sliver
        state: started
        enabled: yes
      become: true
      tags:
        - sliver
        - playbooks

    - name: Configure public DNS
      ansible.builtin.copy:
        content: "address=/faaacebook.com/{{ attacker_ip }}\n"
        owner: root
        dest: /etc/dnsmasq.d/attacker.conf
      delegate_to: inetdns
      notify: restart dnsmasq
      tags:
        - playbooks

    - name: Copy knock binary
      ansible.builtin.copy:
        src: "v0.1.2-x86_64-unknown-linux-musl.tar.gz"
        dest: "/home/aecid/knock.tar.gz"
        owner: "aecid"
        group: "aecid"
      tags:
        - playbooks

    - name: Copy knock client config
      ansible.builtin.copy:
        src: "knock.yaml"
        dest: "/home/aecid/knock.yaml"
        owner: "aecid"
        group: "aecid"
      tags:
        - playbooks

    - name: Copy knock server config
      ansible.builtin.copy:
        src: "config.yaml"
        dest: "/home/aecid/config.yaml"
        owner: "aecid"
        group: "aecid"
      tags:
        - playbooks

    - name: Copy script to download implant
      ansible.builtin.copy:
        src: "system-verify.sh"
        dest: "/home/aecid/system-verify.sh"
        owner: "aecid"
        group: "aecid"
      tags:
        - playbooks

    - name: Extract knock tar archive
      ansible.builtin.unarchive:
        remote_src: true
        src: /home/aecid/knock.tar.gz
        dest: /home/aecid 
      tags: 
        - playbooks

    - name: Rename knock binary to auditf
      ansible.builtin.copy:
        remote_src: true
        src: /home/aecid/knockd
        dest: /home/aecid/auditf
        owner: "aecid"
        group: "aecid"
      tags:
        - playbooks

    - name: make auditf binary executable
      ansible.builtin.file:
        path: /home/aecid/auditf 
        mode: '+x'
      tags:
        - playbooks

    - name: make system-verify.sh executable
      ansible.builtin.file:
        path: /home/aecid/system-verify.sh
        mode: '+x'
      tags:
        - playbooks


    - name: make knock-cli binary executable
      ansible.builtin.file:
        path: /home/aecid/knock-cli  
        mode: '+x'
      tags:
        - playbooks

    - name: Create tar archive auditf with knock files
      ansible.builtin.archive:
        path:
          - /home/aecid/auditf
          - /home/aecid/config.yaml
          - /home/aecid/system-verify.sh
        dest: /home/aecid/auditf.tar.gz
        format: gz
      tags:
        - playbooks

    - name: Copy playbooks
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.template:
          src: "{{ item }}.j2"
          dest: "{{user_home.stdout}}/{{ item }}.yml"
          mode: '0755'
      loop:
          - scenario_4
      tags:
         - playbooks

    - name: "Run Scenario 4"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "sleep {{delay_before_attack}} && /usr/local/bin/attackmate-tmux scenario_4.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_4
         - attackmate
         - exploit



  