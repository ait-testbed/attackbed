- name: Retstart dnsmasq on inetdns
  hosts: inetdns
  become: true
  tasks:
  - name: stop dnsmasq
    ansible.builtin.service:
      name: dnsmasq
      state: stopped
    tags:
      - playbooks

  - name: start dnsmasq
    ansible.builtin.service:
      name: dnsmasq
      state: started
    tags:
      - playbooks

- name: Install Attacker Host
  hosts: attacker
  become: true
  vars:
    attacker_user: aecid
    attacker_ip: 192.42.1.174
    delay_before_attack: 600
  handlers:
    - name: restart dnsmasq
      ansible.builtin.service:
        name: dnsmasq
        state: restarted
      delegate_to: inetdns

    - name: restart msfrpcd
      ansible.builtin.service:
        name: msfrpcd
        state: restarted

  tasks:
    - name: enable sliver service
      ansible.builtin.systemd:
        name: sliver
        state: started
        enabled: yes
      become: true
      tags:
        - sliver
        - playbooks

    - name: Ensure delay of 10 seconds
      ansible.builtin.replace:
        path: /etc/attackmate.yml
        regexp: 'command_delay: 0'
        replace: 'command_delay: 15'
        backup: yes
      become: true
      tags:
        - playbooks
  
    - name: get user home directory
      ansible.builtin.shell: >
             getent passwd {{ attacker_user }}  | awk -F: '{ print $6 }'
      changed_when: false
      register: user_home
      tags:
        - playbooks
        
    - name: Configure public DNS
      ansible.builtin.copy:
        content: "address=/faaacebook.com/{{ attacker_ip }}\n"
        owner: root
        dest: /etc/dnsmasq.d/attacker.conf
      delegate_to: inetdns
      notify: restart dnsmasq
      tags:
        - dns
        - playbooks

    - name: Install dependencies
      ansible.builtin.apt:
        pkg:
          - xz-utils
          - coreutils
      tags:
        - playbooks

    - name: get ssh key from videoserver for privesc
      ansible.builtin.shell: cat /home/webdev/.ssh/id_rsa
      register: sshkey
      delegate_to: videoserver
      tags:
        - playbooks

    - name: Configure public DNS
      ansible.builtin.copy:
        content: "address=/faaacebook.com/{{ attacker_ip }}\n"
        owner: root
        dest: /etc/dnsmasq.d/attacker.conf
      delegate_to: inetdns
      notify: restart dnsmasq
      tags:
        - playbooks

    - name: Copy fatherchroot
      ansible.builtin.copy:
        src: "glibc_rootjail.tar.xz"
        dest: "/home/aecid/glibc_rootjail.tar.xz"
        owner: "aecid"
        group: "aecid"
      tags:
        - playbooks

    - name: save sshkey 
      ansible.builtin.copy:
        content: "{{sshkey.stdout}}"
        dest: "{{user_home.stdout}}/.ssh/privesc_key_videoserver"
        mode: "0600"
        owner: "{{attacker_user}}"
      tags:
        - playbooks

    - name: Copy playbooks
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.template:
          src: "{{ item }}.j2"
          dest: "{{user_home.stdout}}/{{ item }}.yml"
          mode: '0755'
      loop:
          - scenario_2_a_a
          - scenario_2_a_c
      tags:
         - playbooks

    - name: "Run Scenario 2 a a"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "sleep {{delay_before_attack}} && /usr/local/bin/attackmate-tmux scenario_2_a_a.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_2_a_a
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 2 a c"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "sleep {{delay_before_attack}} && /usr/local/bin/attackmate-tmux scenario_2_a_c.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_2_a_c

